apply plugin:'groovy'

defaultTasks 'clean', 'test'

repositories {
    mavenCentral()
    mavenRepo name:"codehaus", url:"http://repository.codehaus.org/"
    mavenRepo name:"groovypp", url:"http://groovypp.artifactoryonline.com/groovypp/libs-releases-local"
}
dependencies {
    //groovy 'org.codehaus.groovy:groovy:1.8.6'
    testCompile 'org.spockframework:spock-core:0.5-groovy-1.8', {
        exclude group:'org.codehaus.groovy', module:'groovy-all'
    }
    groovy 'com.googlecode.gbench:gbench:0.3.0-groovy-1.8'
    groovy 'org.mbte.groovypp:groovypp-all:0.9.0_1.8.2'
}

def defaultEncoding = 'UTF-8'
compileJava {
    options.encoding = defaultEncoding
}
compileTestJava {
    options.encoding = defaultEncoding
}
compileGroovy {
    groovyOptions.encoding = defaultEncoding
    options.encoding = defaultEncoding
}
compileTestGroovy {
    groovyOptions.encoding = defaultEncoding
    options.encoding = defaultEncoding
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-9'
}

task benchmark(dependsOn: 'classes', type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "org.jggug.javaonetokyo.bof.bench.Benchmark"
    jvmArgs("-server", "-Xmx1536m", "-Xms1536m", "-Xss1m", "-XX:MaxPermSize=256m")
    args(
        System.properties["input"] ?: "src/main/resources/rbtree_map_input.csv",
        System.properties["warmUpTime"] ?: 10, // sec
        System.properties["verbose"] != null ? System.properties["verbose"] : false,
        System.properties["trials"] ?: 1,
        System.properties["withPutOnly"] ?: false,
    )
}
